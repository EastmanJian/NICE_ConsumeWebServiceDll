<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dproj_WdpFwOdxTZojHrlvZIArw.invalidHtmlElement.png" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDAAA
        CwwBP0AiyAAAAvxJREFUOE91U3tMzWEY/qXossroZsaalVrWholcikOjRFaOCqd76baVpNLI/E4kjC4W
        +cMap5blXpgu42zVbJIsxYxJmaGkK+p0OY/ndzrGmHd79u573/d53u97v+8T/rY+xU6xf99ejMbHQRsf
        D01oKAb3RKHXa73YVFMl05f9ax9Sk2Xf5AFATAyQlweUlgIlJUBuLpCYCPj64uua1WiWBwToKb+t60Cq
        TLNeBkREAEolcOIEkJEBREYC4eFTCKC4hwf6nBbivjJLradOWZ+vD7BxI7TBwXgQGwutmxu0c+dCM3Mm
        JqytMeHoiLqtWwFXVww5O6PZ3h4FyqwoHbljd7D4w8UFcHdHjSjibW8vqpOT0SMI+Eh8Ii4oFGh+9w4N
        KSnot7PDS1tbFMnWQifwKkiO/gULoHVwwFue/6tGg4GREdTwCJ0kX4qLx+eBAUj2JSEBXebmeGJpCRV3
        d+Rwpig8X+SCThsbnXK3sTHaOPX+sTF8Hx9He0MDhkdHhyTye4q/MDREm5kZ6k1NUWVigtSkBAiNs2eh
        1cICHVR9PWMG2tm1JTQEo1qtrusk8YbDbGK82cgITaypmz4dVfQKfz8IdXa2aGDnZ0QrE09ZeCM9HWOT
        EhWQZOqzs9HIeOO0aXjIXdykL6PYji0+EKqXL8M9LuqJxwYGKAwLQ8/goI7crVJhnH6YR6rgAGspUsUa
        FXGGIkFyfwj3fL3VV6h6h8lzHFK3fmBtPPNdxh7RD01MYIjDvX3oEMqkOpJDiLTUpB7heo4oK+dgVExc
        9/TskTq2REfjFteV7CT5Wu5KsrrAQBRwfYpxVysr5J/OFXVXWREkVxczeJ7Ja3wol+nLJTBWSn+RKHNy
        wkn6HMa82T0sZOfUO/hl+UsWq/OZPMOiQqKIOEecJaRYDqEk/FizauUKqfu/Hyt72xZ1Fh/KcRYdY/FR
        PUlCEmNLeVPem7xwVJn1/19ZXJQnpoXugsLFGdvn2GGzrQ3c58+D14Z1OJi5X3238uofZEH4CWru9vJz
        +yEuAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="callout1_5fcJ.Html" xml:space="preserve">
    <value>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;&lt;script src="{{InstallDir}}/Resources/Scripts/jquery-1.11.1.js"&gt;&lt;/script&gt;
    &lt;script src="{{InstallDir}}/Resources/Scripts/jquery-1.12.4.js"&gt;&lt;/script&gt;
    &lt;link rel="stylesheet" type="text/css" href="{{InstallDir}}/Resources/Scripts/jquery-ui.css" /&gt;
    &lt;script src="{{InstallDir}}/Resources/Scripts/jquery-ui.js"&gt;&lt;/script&gt;
    &lt;link rel="stylesheet" type="text/css" href="direct:dproj_WdpFwOdxTZojHrlvZIArw.Default.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;p&gt;Country:&amp;nbsp;&lt;input datasrc="#egdso.FQN:$Project.M14_PXLO" id="assignmentId4" datafld="name" bounded="true" /&gt;
        (Poland, Spain, United Kingdom)
&lt;/p&gt;
    &lt;p&gt;&lt;a id="assignmentId5" href="javascript:window.invoke('assignmentId5')"&gt;Get Country Info from Web Service&lt;/a&gt;
&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;
&lt;/p&gt;
    &lt;p&gt;Population: &lt;span datasrc="#egdso.FQN:$Project.M15_EgFZ.country" id="assignmentId6" contenteditable="false" datafld="population" dynamic="true"&gt;population of country of get Country Response&lt;/span&gt;&amp;nbsp;
&lt;/p&gt;
    &lt;p&gt;Capital:&amp;nbsp;&lt;span datasrc="#egdso.FQN:$Project.M15_EgFZ.country" id="assignmentId7" contenteditable="false" datafld="capital" dynamic="true"&gt;capital of country of get Country Response&lt;/span&gt;
&lt;/p&gt;
    &lt;p&gt;Currency:&amp;nbsp; &lt;span datasrc="#egdso.FQN:$Project.M15_EgFZ.country" id="assignmentId8" contenteditable="false" datafld="currency" dynamic="true"&gt;currency of country of get Country Response&lt;/span&gt;
&lt;/p&gt;
&lt;xml id="actions"&gt;&lt;actions&gt;&lt;action name="assignmentId5" display="GetCountryInfo" method="Get Country Info from Web Service" type="ConsumeWebService" project="dproj_WdpFwOdxTZojHrlvZIArw"&gt;&lt;method name="M8_Ua9J" parameterCount="0"&gt;&lt;fqn&gt;$Project&lt;/fqn&gt;&lt;/method&gt;&lt;/action&gt;&lt;/actions&gt;&lt;/xml&gt;&lt;/body&gt;
&lt;/html&gt;
</value>
  </data>
  <data name="dproj_WdpFwOdxTZojHrlvZIArw.Default.css" xml:space="preserve">
    <value>body { font-family: arial, calibri, verdana, sans-serif; color: #484848; font-size: 0.8em;padding: 5px}   
p {margin: 5px 0px 5px 0;}
a, a:hover  {color:#1F478C;}   
a:hover{ color:#8caf38;} 


/*---------- Title &amp; Fonts ----------*/
.remark { color: #484848; font-size: 8pt; }

.title1 { font-size: 1.4em; font-weight:normal;margin: 5px 0 20px 0;color:#1F478C;}  
.title2 { font-size: 1.3em; font-weight:bold; margin: 5px 0 20px 0;color:#1F478C;}  
.title3 { font-size: 1.2em; font-weight:bold; margin: 5px 0 20px 0;color:#1F478C;}  

    
/*-------------Table Styles ------------*/
table {border:1px solid #B5CFE5;;border-collapse:collapse;margin: 5px 3px 5px 0; }
table th, table td {padding: 8px 3px 8px 3px;  }  
table td { background: #EFF8FF;  border:1px solid #B5CFE5; }
 
table th,  .columnHeader { text-align: left;  font-weight: bold;  color: #fff;
  background: #9AB8D5;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#9AB8D5', endColorstr='#6794BC');
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#9AB8D5', endColorstr='#6794BC');
  background: -ms-linear-gradient(top, #9AB8D5 0%, #6794BC 100%);
  background: -moz-linear-gradient(top, #9AB8D5 0%, #6794BC 100%);
  background: -o-linear-gradient(top, #9AB8D5 0%, #6794BC 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #9AB8D5), color-stop(1, #6794BC));
  background: -webkit-linear-gradient(top, #9AB8D5 0%, #6794BC 100%);
  background: linear-gradient(top, #9AB8D5 0%, #6794BC 100%);  
 } 

 
/*-------------Form Styles ------------*/
 textarea, select, input, button, iframe {margin: 5px 3px 5px 0; vertical-align: middle }
 
textarea, input[type="text"]  {
border: 1px solid #B5CFE5;
color: #484848; 
 font-size: 1em;
  padding: 2px 0 2px 5px;
  border-radius: 3px;
 -webkit-border-radius: 3px;
 -moz-border-radius: 3px;
  background: #EFF8FF;
  }

select, option {width: 200px;height: 25px;color: #484848; 
 font-size: 1em;
  padding: 2px 0 2px 5px;
  border: 1px solid #B5CFE5;
  background: #EFF8FF;
  border-radius: 3px;
 -webkit-border-radius: 3px;
 -moz-border-radius: 3px;
 }

textarea {  border: 1px solid #B5CFE5;height: 50px; width: 200px; font-family: arial, calibri, verdana, sans-serif; color: #484848; font-size: 1em; } 

button {padding: 3px 20px;margin:5px 5px 5px 0;
  color: #fff;
  font-weight: bold;
  border:1px solid #6491B7;
  background: #6491B7;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#9AB8D5', endColorstr='#6491B7');
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#9AB8D5', endColorstr='#6491B7');
  background: -ms-linear-gradient(top, #9AB8D5 0%, #6491B7 100%);
  background: -moz-linear-gradient(top, #9AB8D5 0%, #6491B7 100%);
  background: -o-linear-gradient(top, #9AB8D5 0%, #6491B7 100%);  
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #9AB8D5), color-stop(1, #6491B7));
  background: -webkit-linear-gradient(top, #9AB8D5 0%, #6491B7 100%);
  background: linear-gradient(top, #9AB8D5 0%, #6491B7 100%);  
  cursor:pointer;  
 border-radius: 5px;
 -webkit-border-radius: 5px;
 -moz-border-radius: 5px;
 }
 
button:hover {
  background: #6491B7;
 filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#6491B7', endColorstr='#9AB8D5');
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#6491B7', endColorstr='#9AB8D5');
  background: -ms-linear-gradient(top, #6491B7 0%, #9AB8D5 100%);
  background: -moz-linear-gradient(top, #6491B7 0%, #9AB8D5 100%);
  background: -o-linear-gradient(top, #6491B7 0%, #9AB8D5 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #6491B7), color-stop(1, #9AB8D5));
  background: -webkit-linear-gradient(top, #6491B7 0%, #9AB8D5 100%);
  background: linear-gradient(top, #6491B7 0%, #9AB8D5 100%);  
 }
 
 iframe { filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#F4FAFF', endColorstr='#ffffff');
 -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#F4FAFF', endColorstr='#ffffff'); 
   background: -ms-linear-gradient(top, #F4FAFF 0%, #fff 30%);
  background: -moz-linear-gradient(top, #F4FAFF 0%, #fff 30%);
  background: -o-linear-gradient(top, #F4FAFF 0%, #fff 30%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #F4FAFF), color-stop(0.3, #fff));
  background: -webkit-linear-gradient(top, #F4FAFF 0%, #fff 30%);
  background: linear-gradient(top, #F4FAFF 0%, #fff 30%);
  border-radius: 3px;
 -webkit-border-radius: 3px;
 -moz-border-radius: 3px;
 border:2px solid #6694BB;padding:3px }
 
 
 img {vertical-align:middle;}
 
 
 
     
/*-------------Calendar Styles ------------*/
.CalendarWrapper {border:2px solid #EFF4F7; padding:10px; }
.CalendarDay {font-size:0.9em;padding: 5px;border:1px solid  #6694BB;}
.CalendarDisabled {font-size:0.9em;padding: 5px;border:1px solid  #6694BB;color:#8F9297}

.CalendarToday { width: 30px;font-size:0.9em;padding: 5px;border:1px solid  #6694BB;background: #CDE2A0;
  background: -ms-linear-gradient(top, #E4F9B7 0%, #BED390 100%);
  background: -moz-linear-gradient(top, #E4F9B7 0%, #BED390 100%);
  background: -o-linear-gradient(top, #E4F9B7 0%, #BED390 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #E4F9B7), color-stop(1, #BED390));
  background: -webkit-linear-gradient(top, #E4F9B7 0%, #BED390 100%);
  background: linear-gradient(top, #E4F9B7 0%, #BED390 100%);
  border:1px solid #94ACD7     }
      
.CalendarToday:hover { 
background: #CDE2A0;
  background: -ms-linear-gradient(top, #9EB4DB 0%, #EAEEF7 100%);
  background: -moz-linear-gradient(top, #9EB4DB 0%, #EAEEF7 100%);
  background: -o-linear-gradient(top, #9EB4DB 0%, #EAEEF7 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, #9EB4DB), color-stop(1, #EAEEF7));
  background: -webkit-linear-gradient(top, #9EB4DB 0%, #EAEEF7 100%);
  background: linear-gradient(top, #9EB4DB 0%, #EAEEF7 100%);
  border:1px solid #94ACD7  
   }      
</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="NOD_VSD_solution" type="System.Byte[], mscorlib">
    <value>
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPFZpc3VhbFNjZW5lU29sdXRpb24+
        DQoJPEdlbmVyYWwgUHJvZHVjdFZlcnNpb249IjYuNy4wLjEyNTgiIFNjaGVtYVZlcnNpb249IjEuNSIg
        TmFtZT0iTmV3UHJvamVjdCIgRGVzY3JpcHRpb249IkRlZmluZSB0aGUgc29sdXRpb24gZGVzY3JpcHRp
        b24gaGVyZSIvPg0KCTxTdW1tYXJ5IEF1dGhvcj0iIiBDYXRlZ29yeT0iIiBDb21tZW50cz0iIiBDb21w
        YW55PSIiIE1hbmFnZXI9IiIgUHJvamVjdD0iIiBUaXRsZT0iIi8+DQoJPFN0YXRlIEV4cGFuZGVkPSJU
        UlVFIi8+DQoJPFByb2plY3RzPg0KCQk8UHJvamVjdCBOYW1lPSJOZXdQcm9qZWN0IiBSZWxQYXRoPSIi
        Lz4NCgk8L1Byb2plY3RzPg0KCTxGaWxlcy8+DQo8L1Zpc3VhbFNjZW5lU29sdXRpb24+
</value>
  </data>
  <data name="NOD_SaProject" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEALOxr8jNUShLLSrOzM+zVTLUM1Cyt+PlsgnOSCxIdcxLzKkszixWAKrJK7aqKM60Vcoo
        KSmw0tcvLy/XKzfWyy9K1zcyMDDUj/D1CU7OSM1N1M3MKy5JzEtOVYLrSiGsSwlop4KCTRjEHXZGBobm
        ugbGuoZmNvowMaCj9FFcZQcAuL0eMrwAAAA=
</value>
  </data>
  <data name="NOD_VSdesignerTreeXml" type="System.Byte[], mscorlib">
    <value>
        PGUgVHlwZT0iU2NlbmVzIiBEaXNwbGF5TmFtZT0iU2NlbmVzIiBFbmFibGU9IlRydWUiIEhpZGRlbj0i
        RmFsc2UiIE5PRF9TZWxlY3RlZF9EZXNpZ25lcl9Ob2RlPSJTY2VuZXNcU2NlbmUxIj48ZSBUeXBlPSJT
        Y2VuZSIgRGlzcGxheU5hbWU9IlNjZW5lMSIgRW5hYmxlPSJUcnVlIiBIaWRkZW49IkZhbHNlIiAvPjwv
        ZT4=
</value>
  </data>
  <data name="NOD_VSD_project" type="System.Byte[], mscorlib">
    <value>
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPFZpc3VhbFNjZW5lUHJvamVjdD4N
        Cgk8R2VuZXJhbCBQcm9kdWN0VmVyc2lvbj0iNi43LjAuMTI1OCIgU2NoZW1hVmVyc2lvbj0iMS41IiBO
        YW1lPSJOZXdQcm9qZWN0IiBEZXNjcmlwdGlvbj0iRGVmaW5lIHRoZSBwcm9qZWN0IGRlc2NyaXB0aW9u
        IGhlcmUiLz4NCgk8U3VtbWFyeSBBdXRob3I9IiIgQ2F0ZWdvcnk9IiIgQ29tbWVudHM9IiIgQ29tcGFu
        eT0iIiBNYW5hZ2VyPSIiIFByb2plY3Q9IiIgVGl0bGU9IiIvPg0KCTxTdGF0ZSBFeHBhbmRlZD0iVFJV
        RSIvPg0KCTxQYWNrYWdlIFBhY2thZ2VOYW1lPSJOZXdQcm9qZWN0IiBQYWNrYWdlUGF0aD0iIi8+DQoJ
        PFNjZW5lcz4NCgkJPFNjZW5lIE5hbWU9IlNjZW5lMSIgUmVsUGF0aD0iIj4NCgkJCTxTdGF0ZSBBY3Rp
        dmU9IkZBTFNFIiBPcGVuZWQ9IkZBTFNFIi8+DQoJCQk8U3VtbWFyeSBBdXRob3I9IiIgQ2F0ZWdvcnk9
        IiIgQ29tbWVudHM9IiIgQ29tcGFueT0iIiBNYW5hZ2VyPSIiIFByb2plY3Q9IiIgVGl0bGU9IiIvPg0K
        CQk8L1NjZW5lPg0KCTwvU2NlbmVzPg0KCTxGaWxlcy8+DQo8L1Zpc3VhbFNjZW5lUHJvamVjdD4=
</value>
  </data>
  <data name="NOD_Scene1" type="System.Byte[], mscorlib">
    <value>
        LoU3AkAne066B3eFWUYmafERIAABAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAGAAAA
        FQAAAAEAAAAQAAAAVQBuAHQAaQB0AGwAZQBkABUAAAABAAAAKAAAAFUAbgB0AGkAdABsAGUAZAAgAGQA
        ZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAAAAAAPQBAACQAQAAFebGQwkZok+El773oDciNgIAAAABAAAA
        AAAAAAAAAAAAAAAABQAAAAUAAAADAAAAFgAAABUAAAABAAAAAAAAABUAAAABAAAAAAAAABUAAAABAAAA
        AAAAABUAAAABAAAAAAAAABUAAAABAAAAAAAAABUAAAABAAAAAAAAABUAAAABAAAAAAAAAAAAgD8QfwAA
        AAAAAICAgAD/AAAA/wAAAAAA/wAAAAAAAAAAAAAA/wAzmf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAAAKAAAAAAAAABIAAAAAAAAACAAAAAAAAAABAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABq08VHh/4tEqzaz+Q4Zj1AAAAAAAAAAAA==
</value>
  </data>
  <data name="NOD_Scene1_picture" type="System.Byte[], mscorlib">
    <value>
        LoU3AkAne066B3eFWUYmafERIAABAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAoAAAD0AQAA
        kAEAABgAAAAAAAAACQAAAAAAAAAIAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
  <data name="Webservice.RTIGeneratedWebService.CountriesEnquiryService.Library.v1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-16" standalone="no"?&gt;
&lt;wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch="http://spring.io/guides/gs-producing-web-service" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://spring.io/guides/gs-producing-web-service" targetNamespace="http://spring.io/guides/gs-producing-web-service"&gt;
  &lt;wsdl:types&gt;
    &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://spring.io/guides/gs-producing-web-service"&gt;
      &lt;xs:element name="getCountryRequest"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element name="name" type="xs:string" /&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="getCountryResponse"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element name="country" type="tns:country" /&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:complexType name="country"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="name" type="xs:string" /&gt;
          &lt;xs:element name="population" type="xs:int" /&gt;
          &lt;xs:element name="capital" type="xs:string" /&gt;
          &lt;xs:element name="currency" type="tns:currency" /&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="currency"&gt;
        &lt;xs:restriction base="xs:string"&gt;
          &lt;xs:enumeration value="GBP" /&gt;
          &lt;xs:enumeration value="EUR" /&gt;
          &lt;xs:enumeration value="PLN" /&gt;
        &lt;/xs:restriction&gt;
      &lt;/xs:simpleType&gt;
    &lt;/xs:schema&gt;
  &lt;/wsdl:types&gt;
  &lt;wsdl:message name="getCountryResponse"&gt;
    &lt;wsdl:part element="tns:getCountryResponse" name="getCountryResponse"&gt;&lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="getCountryRequest"&gt;
    &lt;wsdl:part element="tns:getCountryRequest" name="getCountryRequest"&gt;&lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:portType name="CountriesPort"&gt;
    &lt;wsdl:operation name="getCountry"&gt;
      &lt;wsdl:input message="tns:getCountryRequest" name="getCountryRequest"&gt;&lt;/wsdl:input&gt;
      &lt;wsdl:output message="tns:getCountryResponse" name="getCountryResponse"&gt;&lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:portType&gt;
  &lt;wsdl:binding name="CountriesPortSoap11" type="tns:CountriesPort"&gt;
    &lt;soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" /&gt;
    &lt;wsdl:operation name="getCountry"&gt;
      &lt;soap:operation soapAction="" /&gt;
      &lt;wsdl:input name="getCountryRequest"&gt;
        &lt;soap:body use="literal" /&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output name="getCountryResponse"&gt;
        &lt;soap:body use="literal" /&gt;
      &lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:binding&gt;
  &lt;wsdl:service name="CountriesPortService"&gt;
    &lt;wsdl:port binding="tns:CountriesPortSoap11" name="CountriesPortSoap11"&gt;
      &lt;soap:address location="http://localhost:8080/ws" /&gt;
    &lt;/wsdl:port&gt;
  &lt;/wsdl:service&gt;
&lt;/wsdl:definitions&gt;</value>
  </data>
  <data name="NOD_VSD_events_in_use" type="System.Byte[], mscorlib">
    <value>PHJvb3QgLz4=</value>
  </data>
</root>